# schema for Prisma and for the db that lives under Prisma
# prisma.graphql gets generated based on this file

# @ => directive implemented by the qraphQl server
# [id, name, email] => fields
# [ID, String, [String]] => type of the field
# ! => required

#  enum: for a preset list of possible options
enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
  cart: [CartItem]!
}

type Item {
  id: ID! @id
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User!
}

type CartItem {
  id: ID! @id
  quantity: Int! @default(value: 1)
  item: Item!
  user: User!
}

# the orderitem cannot have any relation to the actual item becuase if the item gets deleted or the price changes, we don't want to overcharge the user or change their invoice
# we have to take a copy of the item and store the details as they were at the time of purchasing

type OrderItem {
  id: ID! @id
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  quantity: Int! @default(value: 1)
  user: User!
}

type Order {
  id: ID! @id
  charge: String!
  items: [OrderItem!]!
  total: Int!
  user: User!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
